// const book = {
//   title: 'The Last Kingdom',
//   author: 'Bernard Cornwell',
//   genres: ['historical prose', 'adventure'],
//   isPublic: true,
//   rating: 8.38,
// };

// console.log(book);

// const user = {
//   name: 'Jacques Gluke',
//   tag: 'jgluke',
//   location: {
//     country: 'Jamaica',
//     city: 'Ocho Rios',
//   },
//   stats: {
//     followers: 5603,
//     views: 4827,
//     likes: 1308,
//   },
// };

// console.table(user);

// const book = {
//   title: 'The Last Kingdom',
//   author: 'Bernard Cornwell',
//   genres: ['historical prose', 'adventure'],
//   isPublic: true,
//   rating: 8.38,
// };

// const bookTitle = book.title;
// console.log(bookTitle); // 'The Last Kingdom'

// const bookGenres = book.genres;
// console.log(bookGenres); // ['historical prose', 'adventurs']

// const bookPrice = book.price;
// console.log(bookPrice); // undefined

// console.log(book['isPublic']);

// const book = {
//   title: 'The Last Kingdom',
//   author: 'Bernard Cornwell',
//   genres: ['historical prose', 'adventure'],
//   isPublic: true,
//   rating: 8.38,
// };

// book.rating = 9;
// book.isPublic = false;
// book.genres.push('–¥—Ä–∞–º–∞');

// console.log(book.rating); // 9
// console.log(book.isPublic); // false
// console.log(book.genres); // ['historical prose', 'adventures', '–¥—Ä–∞–º–∞']

// // ‚úÖ –õ–æ–≥–∏—á–µ—Å–∫–∏ –∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏ —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏
// const bookShelf = {
//   books: ['The Last Kingdom', 'Dream Guardian'],
//   // –≠—Ç–æ –º–µ—Ç–æ–¥ –æ–±—ä–µ–∫—Ç–∞
//   getBooks() {
//     return this.books;
//   },
//   // –≠—Ç–æ –º–µ—Ç–æ–¥ –æ–±—ä–µ–∫—Ç–∞
//   addBook(bookName) {
//     this.books.push(bookName);
//     return this.books;
//   },
// };

// // –í—ã–∑–æ–≤—ã –º–µ—Ç–æ–¥–æ–≤
// console.log(bookShelf.getBooks());
// console.log(bookShelf.addBook('–ù–æ–≤–∞—è –∫–Ω–∏–≥–∞'));

// console.log(bookShelf);

// const animal = {
//   legs: 4,
// };

// console.log(animal);

// const dog = Object.create(animal);
// dog.name = '–ú–∞–Ω–≥–æ';

// console.log(dog); // {name: '–ú–∞–Ω–≥–æ'}
// console.log(dog.name); // '–ú–∞–Ω–≥–æ'
// console.log(dog.legs); // 4

// const book = {
//   title: 'The Last Kingdom',
//   author: 'Bernard Cornwell',
//   genres: ['historical prose', 'adventure'],
//   rating: 8.38,
// };

// console.log(Object.keys(book));

// const book = {
//   title: 'The Last Kingdom',
//   author: 'Bernard Cornwell',
//   genres: ['historical prose', 'adventure'],
//   rating: 8.38,
// };
// const keys = Object.keys(book);

// for (const key of keys) {
//   // –ö–ª—é—á
//   console.log(key);
//   // –ó–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞
//   console.log(book[key]);
// }

// const book = {
//   title: 'The Last Kingdom',
//   author: 'Bernard Cornwell',
//   rating: 8.38,
// };
// const keys = Object.keys(book);
// console.log(keys); // ['title', 'author', 'rating']

// const values = Object.values(book);
// console.log(values); // ['The Last Kingdom', 'Bernard Cornwell', 8.38]

// const entries = Object.entries(book);
// console.table(entries);
// // [["title", "The Last Kingdom"], ["author", "Bernard Cornwell"], ["rating", 8.38]]

// const books = [
//   {
//     title: 'The Last Kingdom',
//     author: 'Bernard Cornwell',
//     rating: 8.38,
//   },
//   {
//     title: '–ù–∞ –±–µ—Ä–µ–≥—É —Å–ø–æ–∫–æ–π–Ω—ã—Ö –≤–æ–¥',
//     author: '–†–æ–±–µ—Ä—Ç –®–µ–∫–ª–∏',
//     rating: 8.51,
//   },
//   {
//     title: '–°–æ–Ω —Å–º–µ—à–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞',
//     author: '–§–µ–¥–æ—Ä –î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π',
//     rating: 7.75,
//   },
// ];

// for (const book of books) {
//   // –û–±—ä–µ–∫—Ç –∫–Ω–∏–≥–∏
//   console.log(book);
//   // –ù–∞–∑–≤–∞–Ω–∏–µ
//   console.log(book.title);
//   // –ê–≤—Ç–æ—Ä
//   console.log(book.author);
//   // –†–µ–π—Ç–∏–Ω–≥
//   console.log(book.rating);
// }

// let totalRating = 0;

// for (const book of books) {
//   totalRating += book.rating;
// }

// const averageRating = (totalRating / books.length).toFixed(2);
// console.log(averageRating); // 8.2

// const temps = [14, -4, 25, 8, 11];

// // –í –∫–æ–Ω—Å–æ–ª–∏ –±—É–¥–µ—Ç –º–∞—Å—Å–∏–≤
// console.log(temps);
// // ‚ùå –¢–∞–∫ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ—Ç–æ–º—É —á—Ç–æ –ø–µ—Ä–µ–¥–∞—ë–º —Ü–µ–ª—ã–π –º–∞—Å—Å–∏–≤
// console.log(Math.max(temps)); // NaN

// // –í –∫–æ–Ω—Å–æ–ª–∏ –±—É–¥–µ—Ç –Ω–∞–±–æ—Ä –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª
// console.log(...temps);
// // ‚úÖ –†–∞—Å–ø—ã–ª–∏–º –∫–æ–ª–ª–µ–∫—Ü–∏—é —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
// console.log(Math.max(...temps)); // 25

// const lastWeekTemps = [14, 25, 11];
// const currentWeekTemps = [23, 17, 18];
// const allTemps = [...lastWeekTemps, ...currentWeekTemps];
// console.log(allTemps); // [14, 25, 11, 23, 17, 18]

// const book = {
//   title: 'The Last Kingdom',
//   author: 'Bernard Cornwell',
//   genres: ['historical prose', 'adventure'],
//   isPublic: true,
//   rating: 8.38,
// };

// // –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∏—Ä—É–µ–º
// const { title, author, isPublic, rating, coverImage } = book;
// console.log(coverImage); // undefined

// const accessType = isPublic ? '–ø—É–±–ª–∏—á–Ω–æ–º' : '–∑–∞–∫—Ä—ã—Ç–æ–º';
// const message = `–ö–Ω–∏–≥–∞ ${title} –∞–≤—Ç–æ—Ä–∞ ${author} —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º ${rating} –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ ${accessType} –¥–æ—Å—Ç—É–ø–µ.`;
// console.log(message);

// const book = {
//   title: 'The Last Kingdom',
//   author: 'Bernard Cornwell',
// };

// // –î–æ–±–∞–≤–∏–º –∫–∞—Ä—Ç–∏–Ω–∫—É –æ–±–ª–æ–∂–∫–∏ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç –≤ –æ–±—ä–µ–∫—Ç–µ –∫–Ω–∏–≥–∏
// const { title, coverImage = 'https://via.placeholder.com/640/480', author } = book;

// console.log(title); // The Last Kingdom
// console.log(author); // Bernard Cornwell
// console.log(coverImage); // https://via.placeholder.com/640/480

// const books = [
//   {
//     title: 'The Last Kingdom',
//     author: 'Bernard Cornwell',
//     rating: 8.38,
//   },
//   {
//     title: '–ù–∞ –±–µ—Ä–µ–≥—É —Å–ø–æ–∫–æ–π–Ω—ã—Ö –≤–æ–¥',
//     author: '–†–æ–±–µ—Ä—Ç –®–µ–∫–ª–∏',
//     rating: 8.51,
//   },
// ];

// for (const book of books) {
//   console.log(book.title);
//   console.log(book.author);
//   console.log(book.rating);
// }

// for (const book of books) {
//   const { title, author, rating } = book;

//   console.log(title);
//   console.log(author);
//   console.log(rating);
// }

// const user = {
//   name: 'Jacques Gluke',
//   tag: 'jgluke',
//   stats: {
//     followers: 5603,
//     views: 4827,
//     likes: 1308,
//   },
// };

// const {
//   name,
//   tag,
//   stats: { followers, views: userViews, likes: userLikes = 0 },
// } = user;

// console.log(name); // Jacques Gluke
// console.log(tag); // jgluke
// console.log(followers); // 5603
// console.log(userViews); // 4827
// console.log(userLikes); // 1308

// function calcBMI(weight, height) {
//   return Number((parseNumber(weight) / parseNumber(height) ** 2).toFixed(1));
// }

// function parseNumber(str) {
//   str = str.replace(',', '.');
//   return parseFloat(str);
// }

// const bmi = calcBMI('88,3', '1.75');
// console.log(bmi); // 28.8

// function printContactsInfo(names, phones) {
//   const namesArr = names.split(',');
//   const phonesArr = phones.split(',');

//   for (let i = 0; i < namesArr.length; i += 1) {
//     console.log(`${namesArr[i]} - ${phonesArr[i]}`);
//   }
// }

// printContactsInfo(
//   'Ivan,Stepan,Petro,Bogdan',
//   '886846868468,484848484,4844844484648,47878764523423'
// );

// #1
// const book = {
//   title: 'Don Quixote',
//   author: 'Miguel de Cervantes Saavedra',
//   rating: 9.3,
//   chapters: [1, 2, 3, 4, 5],
//   totalChapters: 5,
//   rename(newName) {
//     this.title = newName;
//   },
//   addChapter(newChapter) {
//     this.chapters.push(newChapter);
//     this.totalChapters = this.chapters.length;
//   },
// };

// const bookTitle = 'title';

// console.log(book.chapters);
// console.log(book[bookTitle]);

// const inputName = 'color';
// const inputValue = 'red';

// const colorPickerData = {
//   [inputName]: inputValue,
// };

// console.log(colorPickerData);
// console.log(book);
// book.rename('Solaris');
// book.addChapter(6);
// console.log(book);

// console.log(Object.values(book));

// #2

// const newObj = {
//   address: {
//     num1: 1,
//     num2: 2,
//     num3: 3,
//   },
// };

// console.log(Object.values(newObj.address));

// #3 –ö–æ—Ä–∑–∏–Ω–∞ —Ç–æ–≤–∞—Ä–æ–≤

// const cart = {
//   items: [],
//   getItems() {
//     return this.items;
//   },
//   add(product) {
//     this.items.push(product);
//     product.quantity = 1;
//   },
//   remove(productName) {
//     for (const item of this.items) {
//       if (item.name === productName) {
//         this.items.splice(this.items.indexOf(item), 1);
//       }
//     }
//   },
//   clear() {
//     this.items = [];
//   },
//   countTotalPrice() {
//     let total = 0;

//     for (const item of this.items) {
//       total += item.price * item.quantity;
//     }
//     return total;
//   },
//   increaseQuantity(productName) {
//     for (const item of this.items) {
//       if (productName === item.name) {
//         item.quantity += 1;
//       }
//     }
//   },
//   decreaseQuantity(productName) {
//     for (const item of this.items) {
//       if (productName === item.name) {
//         if (item.quantity === 0) {
//           continue;
//         } else {
//           item.quantity -= 1;
//         }
//       }
//     }
//   },
// };

// –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –≤ –º–∞—Å—Å–∏–≤
// cart.add({ name: 'üçé', price: 50 });
// cart.add({ name: 'üçã', price: 60 });
// cart.add({ name: 'üçì', price: 110 });

// –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
// console.table(cart.getItems());

// –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
// cart.remove('üçé');
// console.table(cart.getItems());

// –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É
// cart.clear();
// console.table(cart.getItems());

// –£–≤–µ–ª–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞
// cart.increaseQuantity('üçé');
// console.table(cart.getItems());

// –£–º–µ–Ω—å—à–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞
// cart.decreaseQuantity('üçã');
// cart.decreaseQuantity('üçã');
// cart.decreaseQuantity('üçã');
// console.table(cart.getItems());

// –í—ã–≤–µ—Å—Ç–∏ –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ—Ä–∑–∏–Ω—ã
// console.log('Total: ', cart.countTotalPrice());

//1. –ò—Å–ø–æ–ª—å–∑—É—è —Ñ—É–Ω–∫—Ü–∏—é if...else,
//–Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å:
//"–ö–∞–∫–æ–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ JavaScript?"
//–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç "ECMAScript",
//—Ç–æ –ø–æ–∫–∞–∑–∞—Ç—å —á–µ—Ä–µ–∑ alert: "–í–µ—Ä–Ω–æ!"
//–≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å:"–ù–µ –∑–Ω–∞–µ—Ç–µ? ECMAScript!"

// const userInput = prompt('–ö–∞–∫–æ–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ JavaScript?');
// userInput === 'ECMAScript' ? alert('–í–µ—Ä–Ω–æ!') : alert('–ù–µ –∑–Ω–∞–µ—Ç–µ? ECMAScript!');

//2. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∏—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//—á–∏—Å–ª–æ (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç) –∏ –≤—ã–≤–µ–¥–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å
//—Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á–∞—Å–æ–≤ –∏ –º–∏–Ω—É—Ç

// const userInput = Number(prompt('–í–≤–µ–¥–∏ –º–∏–Ω—É—Ç—ã'));
// console.log(
//   `${Math.floor(userInput / 60)
//     .toString()
//     .padStart(2, '0')}:${userInput % 60}`
// );

// 4. –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å
//–ª–æ–≥–∏–Ω —Å –ø–æ–º–æ—â—å—é prompt –∏ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
//–≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞

//–ï—Å–ª–∏ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç "–ê–¥–º–∏–Ω",
//—Ç–æ prompt –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–∞—Ä–æ–ª—å.
//–ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª–∏ –∏–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–ª–∞–≤–∏—à–∞ Esc
//–≤—ã–≤–µ—Å—Ç–∏ —Å—Ç–æ—Ä–æ–∫—É "–û—Ç–º–µ–Ω–µ–Ω–æ"
//–í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –≤—ã–≤–∫—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É "–Ø –≤–∞—Å –Ω–µ –∑–Ω–∞—é"

//–ü–∞—Ä–æ–ª—å –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Ç–∞–∫:
//–ï—Å–ª–∏ –≤–≤–µ–¥—ë–Ω –ø–∞—Ä–æ–ª—å "–Ø –≥–ª–∞–≤–Ω—ã–π",
//—Ç–æ –≤—ã–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!"
//–∏–Ω–∞—á–µ –≤—ã–≤–æ–¥–∏—Ç—å —Å—Ç—Ä–æ–∫—É "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!"

// const userInput = prompt('–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω');
// console.log(userInput);

// if (userInput === '–ê–¥–º–∏–Ω') {
//   const userPass = prompt('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å');
//   if (userPass) {
//     if (userPass === '–Ø –≥–ª–∞–≤–Ω—ã–π') {
//       console.log('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ');
//     } else {
//       console.log('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å');
//     }
//   } else {
//     console.log('–û—Ç–º–µ–Ω–µ–Ω–æ');
//   }
// } else {
//   console.log('–Ø –≤–∞—Å –Ω–µ –∑–Ω–∞—é');
// }

// –ù–∞–ø–∏—à–∏—Ç–µ —Ü–∏–∫–ª, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å
//—á–∏—Å–ª–∞ –æ—Ç max –¥–æ min –ø–æ —É–±—ã–≤–∞–Ω–∏—é
// –î–æ–¥–∞–π—Ç–µ –≤—Å–µ —á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –æ—Ç min –¥–æ max
// const max = 50;
// const min = 23;
// let total = 0;

// for (let i = max; i >= min; i -= 1) {
//   console.log(i);
//   if (!(i % 2)) {
//     total += i;
//   }
// }
// console.log(`–í—Å–µ–≥–æ: ${total}`);

// const animal = {
//   legs: 4,
// };
// const dog = Object.create(animal);
// dog.name = 'Mango';

// console.log(dog); // {name: 'Mango'}
// console.log(dog.name); // 'Mango'
// console.log(dog.legs); // 4

// const book = {
//   title: 'The Last Kingdom',
//   genres: ['historical prose', 'adventure'],
//   rating: 8.38,
// };
// const keys = Object.keys(book);
// console.log(keys); // ['title', 'genres', 'rating']

// const products = [
//   { name: 'Radar', price: 1300, quantity: 4 },
//   { name: 'Scanner', price: 2700, quantity: 3 },
//   { name: 'Droid', price: 400, quantity: 7 },
//   { name: 'Grip', price: 1200, quantity: 9 },
// ];

// function getAllPropValues(propName) {
//   const newArr = [];

//   for (let product of products) {
//     if (Object.keys(product).includes(propName)) {
//       newArr.push(product[propName]);
//     }
//   }

//   return newArr;
// }

// console.log(getAllPropValues('name'));

// const products = [
//   { name: 'Radar', price: 1300, quantity: 4 },
//   { name: 'Scanner', price: 2700, quantity: 3 },
//   { name: 'Droid', price: 400, quantity: 7 },
//   { name: 'Grip', price: 1200, quantity: 9 },
// ];

// function calculateTotalPrice(productName) {
//   // –ü–∏—à–∏ –∫–æ–¥ –Ω–∏–∂–µ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏
//   let totalPrice = 0;

//   for (let product of products) {
//     if (product.name === productName) {
//       totalPrice =
//       return totalPrice;
//     }
//   }
//   // –ü–∏—à–∏ –∫–æ–¥ –≤—ã—à–µ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏
// }

// console.log(calculateTotalPrice('Radar'));

// const products = [
//   { name: 'Radar', price: 1300, quantity: 4 },
//   { name: 'Scanner', price: 2700, quantity: 3 },
//   { name: 'Droid', price: 400, quantity: 7 },
//   { name: 'Grip', price: 1200, quantity: 9 },
// ];

// function calculateTotalPrice(productName) {
//   for (let product of products) {
//     if (product.name === productName) {
//       return product.price * product.quantity;
//     }
//   }

//   return 0;
// }

// console.log(calculateTotalPrice('Blaster'));

// const atTheOldToad = {
//   potions: [
//     { name: 'Speed potion', price: 460 },
//     { name: 'Dragon breath', price: 780 },
//     { name: 'Stone skin', price: 520 },
//   ],
//   getPotions() {
//     return this.potions;
//   },

//   addPotion(newPotion) {
//     const { name: newName } = newPotion;
//     for (const { name } of this.potions) {
//       if (name === newName) {
//         return `Error! Potion ${newName} is already in your inventory!`;
//       }
//     }
//     this.potions.push(newPotion);
//   },

//   removePotion(potionName) {
//     for (const potion of this.potions) {
//       const { name } = potion;
//       if (name === potionName) {
//         const potionIndex = this.potions.indexOf(potion);
//         this.potions.splice(potionIndex, 1);
//         return;
//       }
//     }

//     return `Potion ${potionName} is not in inventory!`;
//   },
//   updatePotionName(oldName, newName) {
//     for (const potion of this.potions) {
//       if (potion.name === oldName) {
//         potion.name = newName;
//         return;
//       }
//     }

//     return `Potion ${oldName} is not in inventory!`;
//   },
// };

// console.log(
//   atTheOldToad.addPotion({
//     name: 'Dragon breath1',
//     price: 700,
//   })
// );

// console.log(atTheOldToad.removePotion('Dragon breath2'));

// console.log(atTheOldToad.updatePotionName('Dragon breath1', 'Dragon breath'));

// console.log(atTheOldToad.getPotions());
